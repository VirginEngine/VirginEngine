{"ast":null,"code":"var _jsxFileName = \"/home/jakub/projects/git/deathengine/src/editor/files/Files.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { File } from \"./File\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Files = () => {\n  _s();\n  const [state, setState] = useState(0);\n  useEffect(() => {\n    window.data.editor.reloadFiles = () => {\n      setState(state + 1);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: \"scroll\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(File, {\n      file: window.data.files,\n      main: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        cursor: `pointer`\n      },\n      onContextMenu: ({\n        pageX,\n        pageY\n      }) => {\n        window.data.setContextMenu({\n          x: pageX,\n          y: pageY,\n          arr: [[`New folder`, () => {\n            window.data.editor.setNameInput([``, newText => {\n              if (!window.data.editor.alphabet.includes(newText[0].toLowerCase())) {\n                return;\n              }\n              for (let i = 1; i < newText.length; i++) {\n                if (!`${window.data.editor.alphabet}-_${window.data.editor.numbers}`.includes(newText[i].toLowerCase())) {\n                  return;\n                }\n              }\n              window.data.files[newText] = {\n                type: `folder`\n              };\n              window.data.editor.reloadFiles();\n            }]);\n          }]]\n        });\n      },\n      children: \"+ addNewFolder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n_s(Files, \"rTLOxV2ROLFIFUMHWk9W3pFX53M=\");\n_c = Files;\nvar _c;\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"names":["useEffect","useState","File","jsxDEV","_jsxDEV","Files","_s","state","setState","window","data","editor","reloadFiles","style","overflow","children","file","files","main","fileName","_jsxFileName","lineNumber","columnNumber","cursor","onContextMenu","pageX","pageY","setContextMenu","x","y","arr","setNameInput","newText","alphabet","includes","toLowerCase","i","length","numbers","type","_c","$RefreshReg$"],"sources":["/home/jakub/projects/git/deathengine/src/editor/files/Files.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { File } from \"./File\"\n\nexport const Files = () => {\n  const [state, setState] = useState(0)\n  useEffect(() => {\n    window.data.editor.reloadFiles = () => {\n      setState(state + 1)\n    }\n  })\n\n  return <div\n    style={{\n      overflow: \"scroll\"\n    }}\n  >\n    <File\n      file={window.data.files}\n      main={true}\n    />\n    <div\n      style={{\n        cursor: `pointer`\n      }}\n      onContextMenu={({ pageX, pageY }) => {\n        window.data.setContextMenu({\n          x: pageX,\n          y: pageY,\n          arr: [[`New folder`, () => {\n            window.data.editor.setNameInput([``, (newText) => {\n              if(!window.data.editor.alphabet.includes(newText[0].toLowerCase())) {\n                return\n              }\n\n              for(let i = 1; i < newText.length; i++) {\n                if(!`${window.data.editor.alphabet}-_${window.data.editor.numbers}`.includes(newText[i].toLowerCase())) {\n                  return\n                }\n              }\n\n              window.data.files[newText] = {\n                type: `folder`\n              }\n\n              window.data.editor.reloadFiles()\n            }])\n          }]]\n        })\n      }}\n    >\n      + addNewFolder\n    </div>\n  </div>\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrCD,SAAS,CAAC,MAAM;IACdS,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,WAAW,GAAG,MAAM;MACrCJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,CAAC;EAEF,oBAAOH,OAAA;IACLS,KAAK,EAAE;MACLC,QAAQ,EAAE;IACZ,CAAE;IAAAC,QAAA,gBAEFX,OAAA,CAACF,IAAI;MACHc,IAAI,EAAEP,MAAM,CAACC,IAAI,CAACO,KAAM;MACxBC,IAAI,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACFlB,OAAA;MACES,KAAK,EAAE;QACLU,MAAM,EAAE;MACV,CAAE;MACFC,aAAa,EAAEA,CAAC;QAAEC,KAAK;QAAEC;MAAM,CAAC,KAAK;QACnCjB,MAAM,CAACC,IAAI,CAACiB,cAAc,CAAC;UACzBC,CAAC,EAAEH,KAAK;UACRI,CAAC,EAAEH,KAAK;UACRI,GAAG,EAAE,CAAC,CAAC,YAAY,EAAE,MAAM;YACzBrB,MAAM,CAACC,IAAI,CAACC,MAAM,CAACoB,YAAY,CAAC,CAAC,EAAE,EAAGC,OAAO,IAAK;cAChD,IAAG,CAACvB,MAAM,CAACC,IAAI,CAACC,MAAM,CAACsB,QAAQ,CAACC,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC,CAAC,EAAE;gBAClE;cACF;cAEA,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,OAAO,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;gBACtC,IAAG,CAAC,GAAG3B,MAAM,CAACC,IAAI,CAACC,MAAM,CAACsB,QAAQ,KAAKxB,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC2B,OAAO,EAAE,CAACJ,QAAQ,CAACF,OAAO,CAACI,CAAC,CAAC,CAACD,WAAW,CAAC,CAAC,CAAC,EAAE;kBACtG;gBACF;cACF;cAEA1B,MAAM,CAACC,IAAI,CAACO,KAAK,CAACe,OAAO,CAAC,GAAG;gBAC3BO,IAAI,EAAE;cACR,CAAC;cAED9B,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,WAAW,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;UACL,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAE;MAAAG,QAAA,EACH;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AACR,CAAC;AAAAhB,EAAA,CAlDYD,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}