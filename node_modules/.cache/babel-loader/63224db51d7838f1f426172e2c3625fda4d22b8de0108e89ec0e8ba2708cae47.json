{"ast":null,"code":"var _jsxFileName = \"/home/jakub/projects/git/deathengine/src/editor/ui/Config.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boolInput = ({\n  name,\n  text\n}) => {};\nconst numberInput = ({\n  name,\n  text\n}) => {};\nconst stringInput = ({\n  name,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: `flex`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: !isBool ? `text` : `checkbox`,\n      value: text,\n      onChange: ({\n        target\n      }) => {\n        console.log(target);\n        let {\n          value\n        } = target;\n        //console.log(value)\n        if (isBool) {\n          value = value === `true` ? true : false;\n        }\n\n        //console.log(value)\n        window.config[name] = value;\n        //console.log(window.config)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\nconst CustomInput = props => {\n  const type = typeof props.text;\n  myInput = stringInput(props);\n  if (type === `boolean`) {\n    myInput = boolInput(props);\n  }\n  if (type === `number`) {\n    myInput = numberInput(props);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: `flex`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...myInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n_c = CustomInput;\nexport const Config = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(window.config).map(([key, value]) => {\n      return /*#__PURE__*/_jsxDEV(CustomInput, {\n        name: key,\n        text: value\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n_c2 = Config;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomInput\");\n$RefreshReg$(_c2, \"Config\");","map":{"version":3,"names":["boolInput","name","text","numberInput","stringInput","_jsxDEV","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","type","isBool","value","onChange","target","console","log","window","config","CustomInput","props","myInput","_c","Config","Object","entries","map","key","_c2","$RefreshReg$"],"sources":["/home/jakub/projects/git/deathengine/src/editor/ui/Config.jsx"],"sourcesContent":["const boolInput = ({ name, text }) => {\n\n}\n\nconst numberInput = ({ name, text }) => {\n  \n}\n\nconst stringInput = ({ name, text }) => {\n  return <div\n    style={{\n      display: `flex`\n    }}\n  >\n    <div>{name}</div>\n    <input\n      type={!isBool ? `text` : `checkbox`}\n      value={text}\n      onChange={({ target }) => {\n        console.log(target)\n        let { value } = target\n        //console.log(value)\n        if(isBool) {\n          value = value === `true` ? true : false\n        }\n\n        //console.log(value)\n        window.config[name] = value\n        //console.log(window.config)\n      }}\n    />\n  </div>\n}\n\nconst CustomInput = (props) => {\n  const type = typeof props.text\n\n  myInput = stringInput(props)\n\n  if(type === `boolean`) {\n    myInput = boolInput(props)\n  }\n\n  if(type === `number`) {\n    myInput = numberInput(props)\n  }\n\n  return <div\n    style={{\n      display: `flex`\n    }}\n  >\n    <div>{name}</div>\n    <input\n      {...myInput}\n    />\n  </div>\n}\n\nexport const Config = () => {\n  return <div>\n    {Object.entries(window.config).map(([key, value]) => {\n      return <CustomInput\n        key={key}\n        name={key}\n        text={value}\n      />\n    })}\n  </div>\n}"],"mappings":";;AAAA,MAAMA,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,KAAK,CAEtC,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAC;EAAEF,IAAI;EAAEC;AAAK,CAAC,KAAK,CAExC,CAAC;AAED,MAAME,WAAW,GAAGA,CAAC;EAAEH,IAAI;EAAEC;AAAK,CAAC,KAAK;EACtC,oBAAOG,OAAA;IACLC,KAAK,EAAE;MACLC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,gBAEFH,OAAA;MAAAG,QAAA,EAAMP;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjBP,OAAA;MACEQ,IAAI,EAAE,CAACC,MAAM,GAAG,MAAM,GAAG,UAAW;MACpCC,KAAK,EAAEb,IAAK;MACZc,QAAQ,EAAEA,CAAC;QAAEC;MAAO,CAAC,KAAK;QACxBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;QACnB,IAAI;UAAEF;QAAM,CAAC,GAAGE,MAAM;QACtB;QACA,IAAGH,MAAM,EAAE;UACTC,KAAK,GAAGA,KAAK,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;QACzC;;QAEA;QACAK,MAAM,CAACC,MAAM,CAACpB,IAAI,CAAC,GAAGc,KAAK;QAC3B;MACF;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AACR,CAAC;AAED,MAAMU,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAMV,IAAI,GAAG,OAAOU,KAAK,CAACrB,IAAI;EAE9BsB,OAAO,GAAGpB,WAAW,CAACmB,KAAK,CAAC;EAE5B,IAAGV,IAAI,KAAK,SAAS,EAAE;IACrBW,OAAO,GAAGxB,SAAS,CAACuB,KAAK,CAAC;EAC5B;EAEA,IAAGV,IAAI,KAAK,QAAQ,EAAE;IACpBW,OAAO,GAAGrB,WAAW,CAACoB,KAAK,CAAC;EAC9B;EAEA,oBAAOlB,OAAA;IACLC,KAAK,EAAE;MACLC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,gBAEFH,OAAA;MAAAG,QAAA,EAAMP;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjBP,OAAA;MAAA,GACMmB;IAAO;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AACR,CAAC;AAAAa,EAAA,GAvBKH,WAAW;AAyBjB,OAAO,MAAMI,MAAM,GAAGA,CAAA,KAAM;EAC1B,oBAAOrB,OAAA;IAAAG,QAAA,EACJmB,MAAM,CAACC,OAAO,CAACR,MAAM,CAACC,MAAM,CAAC,CAACQ,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEf,KAAK,CAAC,KAAK;MACnD,oBAAOV,OAAA,CAACiB,WAAW;QAEjBrB,IAAI,EAAE6B,GAAI;QACV5B,IAAI,EAAEa;MAAM,GAFPe,GAAG;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGT,CAAC;IACJ,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AACR,CAAC;AAAAmB,GAAA,GAVYL,MAAM;AAAA,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}