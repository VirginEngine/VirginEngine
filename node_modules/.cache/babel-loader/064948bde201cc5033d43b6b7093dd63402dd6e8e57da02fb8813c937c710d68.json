{"ast":null,"code":"export const optymalizeJs = text => {\n  return text.replace(/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/g, ``); // Remove comments\n  //.replace(`\\n`, `;`)\n  //.split(`\\n`) // Split into lines\n  //.map(line => line.trim()) // Trim lines\n  //.filter(line => line !== ``) // Remove empty lines\n  //.map(line => line.replace(/\\s*([({[])\\s*/g, `$1`)) // Remove spaces before brackets\n  //.join(`\\n`) // Join lines\n  //.replace(/\\s{2,}/g, ` `) // Replace multiple spaces with a single space\n};\nconsole.log(optymalizeJs(`\n  const a = \"34\"\n  // data\n  /*\n fsklfjasfjsk\n  */\n  cc\n`));","map":{"version":3,"names":["optymalizeJs","text","replace","console","log"],"sources":["/home/jakub/projects/git/deathengine/src/build/optymalizeJs.js"],"sourcesContent":["export const optymalizeJs = (text) => {\n  return text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/g, ``) // Remove comments\n    //.replace(`\\n`, `;`)\n    //.split(`\\n`) // Split into lines\n    //.map(line => line.trim()) // Trim lines\n    //.filter(line => line !== ``) // Remove empty lines\n    //.map(line => line.replace(/\\s*([({[])\\s*/g, `$1`)) // Remove spaces before brackets\n    //.join(`\\n`) // Join lines\n    //.replace(/\\s{2,}/g, ` `) // Replace multiple spaces with a single space\n}\n\nconsole.log(optymalizeJs(`\n  const a = \"34\"\n  // data\n  /*\n fsklfjasfjsk\n  */\n  cc\n`))"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAOA,IAAI,CACRC,OAAO,CAAC,0BAA0B,EAAE,EAAE,CAAC,EAAC;EACzC;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;AAEDC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}