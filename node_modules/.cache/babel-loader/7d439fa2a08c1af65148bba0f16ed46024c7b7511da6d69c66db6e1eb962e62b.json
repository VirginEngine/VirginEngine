{"ast":null,"code":"var _jsxFileName = \"/home/jakub/projects/git/deathengine/src/editor/ui/NameInput.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NameInput = () => {\n  _s();\n  const [[text, cb], setNameInput] = useState([]);\n  const ref = useRef();\n  const ret = () => {\n    if (text !== ``) {\n      cb(text);\n    }\n    setNameInput([]);\n  };\n\n  // eslint-disable-next-line\n  useEffect(() => {\n    window.editor.setNameInput = setNameInput;\n    const handler = ({\n      target\n    }) => {\n      if (ref.current) {\n        if (!ref.current.contains(target)) {\n          ret();\n        }\n      }\n    };\n    document.addEventListener(`mousedown`, handler);\n    return () => {\n      document.removeEventListener(`mousedown`, handler);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cb && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: ref,\n      autoFocus: true,\n      style: {\n        position: `absolute`,\n        left: `50vw`,\n        top: `50vh`,\n        transform: `translate(-50%, -50%)`,\n        fontSize: 40\n      },\n      value: text,\n      onChange: ({\n        target\n      }) => {\n        let {\n          value\n        } = target;\n        const last = value.slice(0, -1);\n        if (`${window.editor.numbers}-`.includes(value[0])) {\n          return;\n        }\n        if (`${window.editor.alphabet}_`.includes(last)) {\n          return;\n        }\n        setNameInput([value, cb]);\n      },\n      onKeyDown: ({\n        key\n      }) => {\n        if (key === `Enter`) {\n          ret();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n_s(NameInput, \"+iLsQ34rPw007aujzPhK7KTLI6c=\");\n_c = NameInput;\nvar _c;\n$RefreshReg$(_c, \"NameInput\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","NameInput","_s","text","cb","setNameInput","ref","ret","window","editor","handler","target","current","contains","document","addEventListener","removeEventListener","children","type","autoFocus","style","position","left","top","transform","fontSize","value","onChange","last","slice","numbers","includes","alphabet","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jakub/projects/git/deathengine/src/editor/ui/NameInput.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\"\n\nexport const NameInput = () => {\n  const [[text, cb], setNameInput] = useState([])\n  const ref = useRef()\n\n  const ret = () => {\n    if(text !== ``) {\n      cb(text)\n    }\n    setNameInput([])\n  }\n\n  // eslint-disable-next-line\n  useEffect(() => {\n    window.editor.setNameInput = setNameInput\n  \n    const handler = ({ target }) => {\n      if(ref.current) {\n        if(!ref.current.contains(target)) {\n          ret()\n        }\n      }\n    }\n\n    document.addEventListener(`mousedown`, handler)\n\n    return () => {\n      document.removeEventListener(`mousedown`, handler)\n    }\n  })\n\n  return <div>\n    {cb && <input\n      type=\"text\"\n      ref={ref}\n      autoFocus\n      style={{\n        position: `absolute`,\n        left: `50vw`,\n        top: `50vh`,\n        transform: `translate(-50%, -50%)`,\n        fontSize: 40\n      }}\n      value={text}\n      onChange={({ target }) => {\n        let { value } = target\n\n        const last = value.slice(0, -1)\n\n        if(`${window.editor.numbers}-`.includes(value[0])) {\n          return\n        }\n\n        if(`${window.editor.alphabet}_`.includes(last)) {\n          return\n        }\n\n        setNameInput([value, cb])\n      }}\n      onKeyDown={({ key }) => {\n        if(key === `Enter`) {\n          ret()\n        }\n      }}\n    />}\n  </div>\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAAC,CAACC,IAAI,EAAEC,EAAE,CAAC,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAMQ,GAAG,GAAGT,MAAM,CAAC,CAAC;EAEpB,MAAMU,GAAG,GAAGA,CAAA,KAAM;IAChB,IAAGJ,IAAI,KAAK,EAAE,EAAE;MACdC,EAAE,CAACD,IAAI,CAAC;IACV;IACAE,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACdY,MAAM,CAACC,MAAM,CAACJ,YAAY,GAAGA,YAAY;IAEzC,MAAMK,OAAO,GAAGA,CAAC;MAAEC;IAAO,CAAC,KAAK;MAC9B,IAAGL,GAAG,CAACM,OAAO,EAAE;QACd,IAAG,CAACN,GAAG,CAACM,OAAO,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;UAChCJ,GAAG,CAAC,CAAC;QACP;MACF;IACF,CAAC;IAEDO,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEL,OAAO,CAAC;IAE/C,OAAO,MAAM;MACXI,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEN,OAAO,CAAC;IACpD,CAAC;EACH,CAAC,CAAC;EAEF,oBAAOV,OAAA;IAAAiB,QAAA,EACJb,EAAE,iBAAIJ,OAAA;MACLkB,IAAI,EAAC,MAAM;MACXZ,GAAG,EAAEA,GAAI;MACTa,SAAS;MACTC,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBC,IAAI,EAAE,MAAM;QACZC,GAAG,EAAE,MAAM;QACXC,SAAS,EAAE,uBAAuB;QAClCC,QAAQ,EAAE;MACZ,CAAE;MACFC,KAAK,EAAEvB,IAAK;MACZwB,QAAQ,EAAEA,CAAC;QAAEhB;MAAO,CAAC,KAAK;QACxB,IAAI;UAAEe;QAAM,CAAC,GAAGf,MAAM;QAEtB,MAAMiB,IAAI,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/B,IAAG,GAAGrB,MAAM,CAACC,MAAM,CAACqB,OAAO,GAAG,CAACC,QAAQ,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;UACjD;QACF;QAEA,IAAG,GAAGlB,MAAM,CAACC,MAAM,CAACuB,QAAQ,GAAG,CAACD,QAAQ,CAACH,IAAI,CAAC,EAAE;UAC9C;QACF;QAEAvB,YAAY,CAAC,CAACqB,KAAK,EAAEtB,EAAE,CAAC,CAAC;MAC3B,CAAE;MACF6B,SAAS,EAAEA,CAAC;QAAEC;MAAI,CAAC,KAAK;QACtB,IAAGA,GAAG,KAAK,OAAO,EAAE;UAClB3B,GAAG,CAAC,CAAC;QACP;MACF;IAAE;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AACR,CAAC;AAAApC,EAAA,CAjEYD,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}