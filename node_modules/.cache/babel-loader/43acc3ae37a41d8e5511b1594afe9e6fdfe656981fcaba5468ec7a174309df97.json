{"ast":null,"code":"var _jsxFileName = \"/home/jakub/projects/git/deathengine/src/editor/files/File.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  files\n} = window.data;\nexport const File = ({\n  file = files,\n  name\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: file.type === `folder` ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: Object.entries(file).map(([key, value]) => {\n        return /*#__PURE__*/_jsxDEV(File, {\n          file: value,\n          name: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: `file`\n    }, void 0, false)\n  }, void 0, false);\n};\n_c = File;\nvar _c;\n$RefreshReg$(_c, \"File\");","map":{"version":3,"names":["files","window","data","File","file","name","_jsxDEV","_Fragment","children","type","Object","entries","map","key","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jakub/projects/git/deathengine/src/editor/files/File.jsx"],"sourcesContent":["const { files } = window.data\n\nexport const File = ({ file = files, name }) => {\n  return <>\n    {file.type === `folder` ? <>\n      {Object.entries(file).map(([key, value]) => {\n        return <File\n          file={value}\n          name={key}\n        />\n      })}\n    </> : <>\n      {`file`}\n    </> }\n  </>\n}"],"mappings":";;AAAA,MAAM;EAAEA;AAAM,CAAC,GAAGC,MAAM,CAACC,IAAI;AAE7B,OAAO,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI,GAAGJ,KAAK;EAAEK;AAAK,CAAC,KAAK;EAC9C,oBAAOC,OAAA,CAAAC,SAAA;IAAAC,QAAA,EACJJ,IAAI,CAACK,IAAI,KAAK,QAAQ,gBAAGH,OAAA,CAAAC,SAAA;MAAAC,QAAA,EACvBE,MAAM,CAACC,OAAO,CAACP,IAAI,CAAC,CAACQ,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;QAC1C,oBAAOR,OAAA,CAACH,IAAI;UACVC,IAAI,EAAEU,KAAM;UACZT,IAAI,EAAEQ;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MACJ,CAAC;IAAC,gBACF,CAAC,gBAAGZ,OAAA,CAAAC,SAAA;MAAAC,QAAA,EACH;IAAM,gBACP;EAAC,gBACH,CAAC;AACL,CAAC;AAAAW,EAAA,GAbYhB,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}