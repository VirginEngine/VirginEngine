{"ast":null,"code":"var _jsxFileName = \"/home/jakub/projects/git/deathengine/src/editor/files/File.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const File = ({\n  file,\n  name,\n  deep = 0\n}) => {\n  _s();\n  const [open, setOpen] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...style,\n        cursor: \"pointer\",\n        marginLeft: deep * 10\n      },\n      onClick: () => {\n        console.log(name);\n      },\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), file.type === `folder` && open && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: Object.entries(file).map(([key, value]) => {\n        if (key === `type`) {\n          return;\n        }\n        return /*#__PURE__*/_jsxDEV(File, {\n          file: value,\n          name: key,\n          deep: deep + 1\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(File, \"dVkDIfRb5RN4FjtonjBYYwpg89o=\");\n_c = File;\nvar _c;\n$RefreshReg$(_c, \"File\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","File","file","name","deep","_s","open","setOpen","children","style","cursor","marginLeft","onClick","console","log","fileName","_jsxFileName","lineNumber","columnNumber","type","Object","entries","map","key","value","_c","$RefreshReg$"],"sources":["/home/jakub/projects/git/deathengine/src/editor/files/File.jsx"],"sourcesContent":["import { useState } from \"react\"\n\nexport const File = ({ file, name, deep = 0 }) => {\n  const [open, setOpen] = useState(true)\n\n  return <>\n    <div\n      style={{\n        ...style,\n        cursor: \"pointer\",\n        marginLeft: deep * 10\n      }}\n      onClick={() => {\n        console.log(name)\n      }}\n    >\n      {name}\n    </div>\n    {file.type === `folder` && open && <>\n      {Object.entries(file).map(([key, value]) => {\n        if(key === `type`) {\n          return\n        }\n        return <File\n          file={value}\n          name={key}\n          key={key}\n          deep={deep + 1}\n        />\n      })}\n    </>}\n  </>\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,OAAO,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC,IAAI,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,oBAAOE,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACLV,OAAA;MACEW,KAAK,EAAE;QACL,GAAGA,KAAK;QACRC,MAAM,EAAE,SAAS;QACjBC,UAAU,EAAEP,IAAI,GAAG;MACrB,CAAE;MACFQ,OAAO,EAAEA,CAAA,KAAM;QACbC,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;MACnB,CAAE;MAAAK,QAAA,EAEDL;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACLhB,IAAI,CAACiB,IAAI,KAAK,QAAQ,IAAIb,IAAI,iBAAIR,OAAA,CAAAE,SAAA;MAAAQ,QAAA,EAChCY,MAAM,CAACC,OAAO,CAACnB,IAAI,CAAC,CAACoB,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;QAC1C,IAAGD,GAAG,KAAK,MAAM,EAAE;UACjB;QACF;QACA,oBAAOzB,OAAA,CAACG,IAAI;UACVC,IAAI,EAAEsB,KAAM;UACZrB,IAAI,EAAEoB,GAAI;UAEVnB,IAAI,EAAEA,IAAI,GAAG;QAAE,GADVmB,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CAAC;MACJ,CAAC;IAAC,gBACF,CAAC;EAAA,eACH,CAAC;AACL,CAAC;AAAAb,EAAA,CA9BYJ,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}