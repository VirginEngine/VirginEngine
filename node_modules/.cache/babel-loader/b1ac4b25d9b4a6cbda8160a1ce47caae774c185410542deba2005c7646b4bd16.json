{"ast":null,"code":"var _jsxFileName = \"/home/jakub/projects/git/deathengine/src/editor/files/File.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const File = ({\n  style = {},\n  file,\n  name\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...style,\n      display: \"flex\",\n      flexDirection: \"column\",\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      console.log(name);\n    },\n    children: file.type === `folder` ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: 10\n      },\n      children: Object.entries(file).map(([key, value]) => {\n        if (key === `type`) {\n          return;\n        }\n        return /*#__PURE__*/_jsxDEV(File, {\n          file: value,\n          name: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: name\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 10\n  }, this);\n};\n_c = File;\nvar _c;\n$RefreshReg$(_c, \"File\");","map":{"version":3,"names":["File","style","file","name","_jsxDEV","display","flexDirection","cursor","onClick","console","log","children","type","marginLeft","Object","entries","map","key","value","fileName","_jsxFileName","lineNumber","columnNumber","_Fragment","_c","$RefreshReg$"],"sources":["/home/jakub/projects/git/deathengine/src/editor/files/File.jsx"],"sourcesContent":["export const File = ({ style = {}, file, name }) => {\n  return <div\n    style={{\n      ...style,\n      display: \"flex\",\n      flexDirection: \"column\",\n      cursor: \"pointer\"\n    }}\n    onClick={() => {\n      console.log(name)\n    }}\n  >\n    {file.type === `folder` ? <div\n      style={{\n        marginLeft: 10\n      }}\n    >\n      {Object.entries(file).map(([key, value]) => {\n        if(key === `type`) {\n          return\n        }\n        return <File\n          file={value}\n          name={key}\n          key={key}\n        />\n      })}\n    </div> : <>\n      {name}\n    </> }\n  </div>\n}"],"mappings":";;AAAA,OAAO,MAAMA,IAAI,GAAGA,CAAC;EAAEC,KAAK,GAAG,CAAC,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,KAAK;EAClD,oBAAOC,OAAA;IACLH,KAAK,EAAE;MACL,GAAGA,KAAK;MACRI,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,MAAM,EAAE;IACV,CAAE;IACFC,OAAO,EAAEA,CAAA,KAAM;MACbC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IACnB,CAAE;IAAAQ,QAAA,EAEDT,IAAI,CAACU,IAAI,KAAK,QAAQ,gBAAGR,OAAA;MACxBH,KAAK,EAAE;QACLY,UAAU,EAAE;MACd,CAAE;MAAAF,QAAA,EAEDG,MAAM,CAACC,OAAO,CAACb,IAAI,CAAC,CAACc,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;QAC1C,IAAGD,GAAG,KAAK,MAAM,EAAE;UACjB;QACF;QACA,oBAAOb,OAAA,CAACJ,IAAI;UACVE,IAAI,EAAEgB,KAAM;UACZf,IAAI,EAAEc;QAAI,GACLA,GAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MACJ,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAAGlB,OAAA,CAAAmB,SAAA;MAAAZ,QAAA,EACNR;IAAI,gBACL;EAAC;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AACR,CAAC;AAAAE,EAAA,GA/BYxB,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}