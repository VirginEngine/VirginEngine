{"ast":null,"code":"var _jsxFileName = \"/home/jakub/projects/git/deathengine/src/editor/ui/Config.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoolInput = ({\n  name,\n  text\n}) => {\n  _s();\n  const [currentBool, setCurrentBool] = useState(text);\n  return {\n    type: `checkbox`,\n    value: currentBool,\n    onChange: e => {\n      console.log(e.target.clicked);\n      //let value = { target }\n      //console.log(value)\n      //value = value === `true`\n      //setCurrentBool(value)\n      //console.log(value)\n    }\n  };\n};\n_s(BoolInput, \"8iAUsMksTXvhYnS3Ecu+ZeMCTI8=\");\n_c = BoolInput;\nconst NumberInput = ({\n  name,\n  text\n}) => {\n  _s2();\n  const [currentNumber, setCurrentNumber] = useState(text);\n  return {\n    type: `text`,\n    value: currentNumber,\n    onChange: ({\n      target\n    }) => {\n      let {\n        value\n      } = target;\n      setCurrentNumber(value);\n      window.config[name] = Number(value) | 0;\n    }\n  };\n};\n_s2(NumberInput, \"1X13cJ5H2OZspJfI04cbtEe90RU=\");\n_c2 = NumberInput;\nconst StringInput = ({\n  name,\n  text\n}) => {\n  _s3();\n  const [currentText, setCurrentText] = useState(text);\n  return {\n    type: `text`,\n    value: currentText,\n    onChange: ({\n      target\n    }) => {\n      const {\n        value\n      } = target;\n      setCurrentText(value);\n      window.config[name] = value;\n    }\n  };\n};\n_s3(StringInput, \"7llswz0Tu1z9fJWoqeO4cluzfgo=\");\n_c3 = StringInput;\nconst CustomInput = props => {\n  const type = typeof props.text;\n  let myInput = StringInput(props);\n  if (type === `boolean`) {\n    myInput = BoolInput(props);\n  }\n  if (type === `number`) {\n    myInput = NumberInput(props);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: `flex`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...myInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n_c4 = CustomInput;\nexport const Config = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(window.config).map(([key, value]) => {\n      return /*#__PURE__*/_jsxDEV(CustomInput, {\n        name: key,\n        text: value\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n};\n_c5 = Config;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"BoolInput\");\n$RefreshReg$(_c2, \"NumberInput\");\n$RefreshReg$(_c3, \"StringInput\");\n$RefreshReg$(_c4, \"CustomInput\");\n$RefreshReg$(_c5, \"Config\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","BoolInput","name","text","_s","currentBool","setCurrentBool","type","value","onChange","e","console","log","target","clicked","_c","NumberInput","_s2","currentNumber","setCurrentNumber","window","config","Number","_c2","StringInput","_s3","currentText","setCurrentText","_c3","CustomInput","props","myInput","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","_c4","Config","Object","entries","map","key","_c5","$RefreshReg$"],"sources":["/home/jakub/projects/git/deathengine/src/editor/ui/Config.jsx"],"sourcesContent":["import { useState } from \"react\"\n\nconst BoolInput = ({ name, text }) => {\n  const [currentBool, setCurrentBool] = useState(text)\n\n  return {\n    type: `checkbox`,\n    value: currentBool,\n    onChange: (e) => {\n      console.log(e.target.clicked)\n      //let value = { target }\n      //console.log(value)\n      //value = value === `true`\n      //setCurrentBool(value)\n      //console.log(value)\n    }\n  }\n}\n\nconst NumberInput = ({ name, text }) => {\n  const [currentNumber, setCurrentNumber] = useState(text)\n\n  return {\n    type: `text`,\n    value: currentNumber,\n    onChange: ({ target }) => {\n      let { value } = target\n      setCurrentNumber(value)\n\n      window.config[name] = Number(value) | 0\n    }\n  }\n}\n\nconst StringInput = ({ name, text }) => {\n  const [currentText, setCurrentText] = useState(text)\n\n  return {\n    type: `text`,\n    value: currentText,\n    onChange: ({ target }) => {\n      const { value } = target\n      setCurrentText(value)\n\n      window.config[name] = value\n    }\n  }\n}\n\nconst CustomInput = (props) => {\n  const type = typeof props.text\n\n  let myInput = StringInput(props)\n\n  if(type === `boolean`) {\n    myInput = BoolInput(props)\n  }\n\n  if(type === `number`) {\n    myInput = NumberInput(props)\n  }\n\n  return <div\n    style={{\n      display: `flex`\n    }}\n  >\n    <div>{props.name}</div>\n    <input\n      {...myInput}\n    />\n  </div>\n}\n\nexport const Config = () => {\n  return <div>\n    {Object.entries(window.config).map(([key, value]) => {\n      return <CustomInput\n        key={key}\n        name={key}\n        text={value}\n      />\n    })}\n  </div>\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}