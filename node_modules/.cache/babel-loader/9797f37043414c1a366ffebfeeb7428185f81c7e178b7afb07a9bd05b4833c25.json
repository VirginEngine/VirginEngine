{"ast":null,"code":"const cleanObj = obj => {\n  for (const key in obj) {\n    delete obj[key];\n  }\n};\nconst setData = data => {\n  const {\n    config,\n    editor,\n    files\n  } = window;\n\n  // Config\n  cleanObj(config);\n  for (const key in data.config) {\n    config[key] = data.config[key];\n  }\n\n  // Files\n  cleanObj(files);\n  for (const key in data.files) {\n    files[key] = data.files[key];\n  }\n  editor.setUp = true;\n  editor.reload();\n};\nexport const load = () => {\n  const plikInput = document.createElement(`input`);\n  plikInput.type = `file`;\n  plikInput.accept = `.deathengine`;\n  plikInput.addEventListener(`change`, function (e) {\n    console.log(e);\n    const [file] = this.files;\n    const reader = new FileReader();\n    reader.onload = ({\n      target\n    }) => {\n      const jsonFile = target.result;\n      const data = JSON.parse(jsonFile);\n      console.log(data);\n      setData(data);\n    };\n    reader.readAsText(file);\n  });\n  plikInput.click();\n};","map":{"version":3,"names":["cleanObj","obj","key","setData","data","config","editor","files","window","setUp","reload","load","plikInput","document","createElement","type","accept","addEventListener","e","console","log","file","reader","FileReader","onload","target","jsonFile","result","JSON","parse","readAsText","click"],"sources":["/home/jakub/projects/git/deathengine/src/loadData/load.js"],"sourcesContent":["const cleanObj = (obj) => {\n  for(const key in obj) {\n    delete obj[key]\n  }\n}\n\nconst setData = (data) => {\n  const { config, editor, files } = window\n\n  // Config\n  cleanObj(config)\n  for(const key in data.config) {\n    config[key] = data.config[key]\n  }\n\n  // Files\n  cleanObj(files)\n  for(const key in data.files) {\n    files[key] = data.files[key]\n  }\n\n  editor.setUp = true\n  editor.reload()\n}\n\nexport const load = () => {\n  const plikInput = document.createElement(`input`)\n  plikInput.type = `file`\n  plikInput.accept = `.deathengine`\n\n  plikInput.addEventListener(`change`, function(e) {\n    console.log(e)\n    const [file] = this.files\n    const reader = new FileReader()\n\n    reader.onload = ({ target }) => {\n      const jsonFile = target.result\n\n      const data = JSON.parse(jsonFile)\n      console.log(data)\n\n      setData(data)\n    }\n\n    reader.readAsText(file)\n  })\n\n  plikInput.click()\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,GAAG,IAAK;EACxB,KAAI,MAAMC,GAAG,IAAID,GAAG,EAAE;IACpB,OAAOA,GAAG,CAACC,GAAG,CAAC;EACjB;AACF,CAAC;AAED,MAAMC,OAAO,GAAIC,IAAI,IAAK;EACxB,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGC,MAAM;;EAExC;EACAR,QAAQ,CAACK,MAAM,CAAC;EAChB,KAAI,MAAMH,GAAG,IAAIE,IAAI,CAACC,MAAM,EAAE;IAC5BA,MAAM,CAACH,GAAG,CAAC,GAAGE,IAAI,CAACC,MAAM,CAACH,GAAG,CAAC;EAChC;;EAEA;EACAF,QAAQ,CAACO,KAAK,CAAC;EACf,KAAI,MAAML,GAAG,IAAIE,IAAI,CAACG,KAAK,EAAE;IAC3BA,KAAK,CAACL,GAAG,CAAC,GAAGE,IAAI,CAACG,KAAK,CAACL,GAAG,CAAC;EAC9B;EAEAI,MAAM,CAACG,KAAK,GAAG,IAAI;EACnBH,MAAM,CAACI,MAAM,CAAC,CAAC;AACjB,CAAC;AAED,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACxB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EACjDF,SAAS,CAACG,IAAI,GAAG,MAAM;EACvBH,SAAS,CAACI,MAAM,GAAG,cAAc;EAEjCJ,SAAS,CAACK,gBAAgB,CAAC,QAAQ,EAAE,UAASC,CAAC,EAAE;IAC/CC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,MAAM,CAACG,IAAI,CAAC,GAAG,IAAI,CAACd,KAAK;IACzB,MAAMe,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAE/BD,MAAM,CAACE,MAAM,GAAG,CAAC;MAAEC;IAAO,CAAC,KAAK;MAC9B,MAAMC,QAAQ,GAAGD,MAAM,CAACE,MAAM;MAE9B,MAAMvB,IAAI,GAAGwB,IAAI,CAACC,KAAK,CAACH,QAAQ,CAAC;MACjCP,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;MAEjBD,OAAO,CAACC,IAAI,CAAC;IACf,CAAC;IAEDkB,MAAM,CAACQ,UAAU,CAACT,IAAI,CAAC;EACzB,CAAC,CAAC;EAEFT,SAAS,CAACmB,KAAK,CAAC,CAAC;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}