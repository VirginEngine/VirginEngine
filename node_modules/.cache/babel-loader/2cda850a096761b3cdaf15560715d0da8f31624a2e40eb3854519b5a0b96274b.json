{"ast":null,"code":"var _jsxFileName = \"/home/jakub/projects/git/deathengine/src/editor/ui/Config.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boolInput = ({\n  name,\n  text\n}) => {};\nconst numberInput = ({\n  name,\n  text\n}) => {};\nconst StringInput = ({\n  name,\n  text\n}) => {\n  _s();\n  const [currentText, setCurrentText] = useState(text);\n  return {\n    type: `text`,\n    value: currentText,\n    onChange: ({\n      target\n    }) => {\n      const {\n        value\n      } = target;\n      setCurrentText(value);\n      window.config[name] = value;\n    }\n  };\n};\n_s(StringInput, \"7llswz0Tu1z9fJWoqeO4cluzfgo=\");\n_c = StringInput;\nconst CustomInput = props => {\n  const type = typeof props.text;\n  let myInput = StringInput(props);\n  if (type === `boolean`) {\n    myInput = boolInput(props);\n  }\n  if (type === `number`) {\n    myInput = numberInput(props);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: `flex`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...myInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n_c2 = CustomInput;\nexport const Config = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(window.config).map(([key, value]) => {\n      return /*#__PURE__*/_jsxDEV(CustomInput, {\n        name: key,\n        text: value\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n_c3 = Config;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StringInput\");\n$RefreshReg$(_c2, \"CustomInput\");\n$RefreshReg$(_c3, \"Config\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","boolInput","name","text","numberInput","StringInput","_s","currentText","setCurrentText","type","value","onChange","target","window","config","_c","CustomInput","props","myInput","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Config","Object","entries","map","key","_c3","$RefreshReg$"],"sources":["/home/jakub/projects/git/deathengine/src/editor/ui/Config.jsx"],"sourcesContent":["import { useState } from \"react\"\n\nconst boolInput = ({ name, text }) => {\n\n}\n\nconst numberInput = ({ name, text }) => {\n  \n}\n\nconst StringInput = ({ name, text }) => {\n  const [currentText, setCurrentText] = useState(text)\n\n  return {\n    type: `text`,\n    value: currentText,\n    onChange: ({ target }) => {\n      const { value } = target\n      setCurrentText(value)\n\n      window.config[name] = value\n    }\n  }\n}\n\nconst CustomInput = (props) => {\n  const type = typeof props.text\n\n  let myInput = StringInput(props)\n\n  if(type === `boolean`) {\n    myInput = boolInput(props)\n  }\n\n  if(type === `number`) {\n    myInput = numberInput(props)\n  }\n\n  return <div\n    style={{\n      display: `flex`\n    }}\n  >\n    <div>{props.name}</div>\n    <input\n      {...myInput}\n    />\n  </div>\n}\n\nexport const Config = () => {\n  return <div>\n    {Object.entries(window.config).map(([key, value]) => {\n      return <CustomInput\n        key={key}\n        name={key}\n        text={value}\n      />\n    })}\n  </div>\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,KAAK,CAEtC,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAC;EAAEF,IAAI;EAAEC;AAAK,CAAC,KAAK,CAExC,CAAC;AAED,MAAME,WAAW,GAAGA,CAAC;EAAEH,IAAI;EAAEC;AAAK,CAAC,KAAK;EAAAG,EAAA;EACtC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACK,IAAI,CAAC;EAEpD,OAAO;IACLM,IAAI,EAAE,MAAM;IACZC,KAAK,EAAEH,WAAW;IAClBI,QAAQ,EAAEA,CAAC;MAAEC;IAAO,CAAC,KAAK;MACxB,MAAM;QAAEF;MAAM,CAAC,GAAGE,MAAM;MACxBJ,cAAc,CAACE,KAAK,CAAC;MAErBG,MAAM,CAACC,MAAM,CAACZ,IAAI,CAAC,GAAGQ,KAAK;IAC7B;EACF,CAAC;AACH,CAAC;AAAAJ,EAAA,CAbKD,WAAW;AAAAU,EAAA,GAAXV,WAAW;AAejB,MAAMW,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAMR,IAAI,GAAG,OAAOQ,KAAK,CAACd,IAAI;EAE9B,IAAIe,OAAO,GAAGb,WAAW,CAACY,KAAK,CAAC;EAEhC,IAAGR,IAAI,KAAK,SAAS,EAAE;IACrBS,OAAO,GAAGjB,SAAS,CAACgB,KAAK,CAAC;EAC5B;EAEA,IAAGR,IAAI,KAAK,QAAQ,EAAE;IACpBS,OAAO,GAAGd,WAAW,CAACa,KAAK,CAAC;EAC9B;EAEA,oBAAOjB,OAAA;IACLmB,KAAK,EAAE;MACLC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,gBAEFrB,OAAA;MAAAqB,QAAA,EAAMJ,KAAK,CAACf;IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvBzB,OAAA;MAAA,GACMkB;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AACR,CAAC;AAAAC,GAAA,GAvBKV,WAAW;AAyBjB,OAAO,MAAMW,MAAM,GAAGA,CAAA,KAAM;EAC1B,oBAAO3B,OAAA;IAAAqB,QAAA,EACJO,MAAM,CAACC,OAAO,CAAChB,MAAM,CAACC,MAAM,CAAC,CAACgB,GAAG,CAAC,CAAC,CAACC,GAAG,EAAErB,KAAK,CAAC,KAAK;MACnD,oBAAOV,OAAA,CAACgB,WAAW;QAEjBd,IAAI,EAAE6B,GAAI;QACV5B,IAAI,EAAEO;MAAM,GAFPqB,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGT,CAAC;IACJ,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AACR,CAAC;AAAAO,GAAA,GAVYL,MAAM;AAAA,IAAAZ,EAAA,EAAAW,GAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}